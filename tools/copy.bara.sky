core.workflow(
	name = "release",
	origin = folder.origin(materialize_outside_symlinks=True),
	destination = folder.destination(),
	authoring = authoring.pass_thru("Marc Fisher <fisherii@google.com>"),
	origin_files = glob(
		[
			# Source paths to include
			"*",
			"browsers/**",
			"build_files/**",
			"common/**",
			"go/bazel/**",
			"go/cmdhelper/**",
			"go/metadata/**",
			"go/portpicker/**",
			"go/screenshotter/**",
			"go/webtest/**",
			"java/**",
			"javatests/**",
			"scalatests/**",
			"testdata/**",
			"testing/**",
			"third_party/**",
			"web/**",

			# binaries to include
			"bazel-bin/go/metadata/main/*/main",
			"bazel-bin/go/metadata/main/*/main.exe",		
			"bazel-bin/go/wsl/main/*/main",
			"bazel-bin/go/wsl/main/*/main.exe",		
			"bazel-bin/go/wtl/main/*/main",
			"bazel-bin/go/wtl/main/*/main.exe",		
		],
		exclude = ["go/metadata/main/**"],
	),
	transformations = [
		core.move("bazel-bin/go/metadata/main", "go/metadata/main"),
		core.move("bazel-bin/go/wsl", "go/wsl"),
		core.move("bazel-bin/go/wtl", "go/wtl"),
		core.move("build_files/metadata.BUILD", "go/metadata/main/BUILD.bazel"),
		core.move("build_files/wsl.BUILD", "go/wsl/BUILD.bazel"),
		core.move("build_files/wtl.BUILD", "go/wtl/main/BUILD.bazel"),
	],
)